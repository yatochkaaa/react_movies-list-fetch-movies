{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","a","fetch","response","ok","Error","status","statusText","json","FindMovie","addMovie","movieAdded","useState","movieTitle","setMovieTitle","setMovie","isFound","setFound","hasMovieFound","result","Response","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","setMovies","setMovieAdded","isMovieInList","movieId","some","movieFromList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55ea6bcd.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  if (movie === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=340ee6ae&t=';\n\nexport const getMovie = async (title: string) => {\n  const response = await fetch(`${BASE_URL}${title}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const movie = await response.json();\n\n  return movie;\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n  movieAdded: boolean;\n}\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, movieAdded }) => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isFound, setFound] = useState<boolean>(true);\n\n  const hasMovieFound = async () => {\n    const result = await getMovie(movieTitle);\n\n    if (result.Response === 'False') {\n      setFound(false);\n    }\n\n    if (result.Response === 'True') {\n      setFound(true);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input is-danger\"\n                value={movieTitle}\n                onChange={(event) => setMovieTitle(event.target.value)}\n              />\n            </div>\n          </label>\n\n          {!isFound && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n              onClick={async () => {\n                await hasMovieFound();\n                if (isFound) {\n                  setMovie(await getMovie(movieTitle));\n                }\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie && isFound) {\n                  addMovie(movie);\n                }\n\n                setMovieTitle('');\n              }}\n            >\n              Add to the list\n            </button>\n            {movieAdded && (\n              <p className=\"help is-danger\">You already added this movie</p>\n            )}\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {isFound && <MovieCard movie={movie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movieAdded, setMovieAdded] = useState<boolean>(false);\n\n  const isMovieInList = (movieId: string): boolean => movies\n    .some(movieFromList => movieFromList.imdbID === movieId);\n\n  const addMovie = (movie: Movie) => {\n    if (!isMovieInList(movie.imdbID)) {\n      setMovies([...movies, movie]);\n      setMovieAdded(false);\n    }\n\n    if (isMovieInList(movie.imdbID)) {\n      setMovies([...movies]);\n      setMovieAdded(true);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} movieAdded={movieAdded} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}